<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 指明这个映射文件adminMapper.xml的逻辑路径,如果与接口建立映射，那么逻辑路径应该与接口的物理路径一致-->
<mapper namespace="com.lcvc.intern_choose.dao.StudentDao">
    <!--==================================基本查询============================-->
    <!-- 学生表的Classes关联对象-->
    <resultMap id="classes" type="com.lcvc.intern_choose.model.Student">
        <association property="classes" javaType="com.lcvc.intern_choose.model.Classes" column="classId"
                     select="com.lcvc.intern_choose.dao.ClassesDao.get">
        </association>
    </resultMap>

    <select id="get" resultMap="classes">
        select * from student where studentNumber=#{studentNumber}
    </select>

    <select id="login" resultType="Integer">
        select count(1) from student where studentNumber=#{studentNumber} and password=#{password}
    </select>


    <select id="readAll" resultMap="classes">
        select * from student
        <include refid="queryWhere"></include>
        order by studentNumber asc
    </select>

    <select id="query" resultMap="classes">
        select * from student
        <include refid="queryWhere"></include>
        order by studentNumber asc limit #{offset},#{length}
    </select>

    <select id="querySize" resultType="Integer">
        select count(1) from student
        <include refid="queryWhere"></include>
    </select>

    <insert id="save">
         insert into student (studentNumber,name,password,tel,qq,classId)
         values(#{studentNumber},#{name},#{password},#{tel},#{qq},#{classId})
    </insert>

    <insert id="update">
        update student
        <set>
            <if test="name!=null">
                name=#{name},
            </if>
            <if test="password!=null">
                password=#{password},
            </if>
            <if test="tel!=null">
                tel=#{tel},
            </if>
            <if test="qq!=null">
                qq=#{qq},
            </if>
            <if test="classId!=null">
                classId=#{classId},
            </if>
        </set>
        where studentNumber=#{studentNumber}
    </insert>

    <delete id="delete">
        delete from student where studentNumber=#{studentNumber}
    </delete>

    <!--统一查询的条件-->
    <sql id="queryWhere">
        <if test="objectQuery!=null">
            <where>
                <if test="objectQuery.name!=null and objectQuery.name.length()>0">
                    <!-- bind，重新定义一个变量，可用于模糊查询等，并且可以直接覆盖原变量 -->
                    <bind name="name" value="'%' + _parameter.objectQuery.name + '%'" />
                    and name like #{name}
                </if>
                <!-- 排除下列的学号来查询学生集合-->
                <if test="objectQuery.studentNumbers!=null">
                    <if test="objectQuery.studentNumbers.length>0">
                       and studentNumber not in
                        <foreach item="items" collection="objectQuery.studentNumbers" open="(" separator="," close=")">
                            #{items}
                        </foreach>
                    </if>
                </if>
                <!-- 根据classIds查询学生集合-->
                <if test="objectQuery.classIds!=null">
                    <if test="objectQuery.classIds.size()>0">
                        and classId  in
                        <foreach item="items" collection="objectQuery.classIds" open="(" separator="," close=")">
                            #{items}
                        </foreach>
                    </if>
                </if>
                <if test="objectQuery.classId!=null">
                    and classId=#{objectQuery.classId}
                </if>
            </where>
        </if>
    </sql>

</mapper>