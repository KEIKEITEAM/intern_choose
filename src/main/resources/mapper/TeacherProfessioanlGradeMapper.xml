<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lcvc.intern_choose.dao.TeacherProfessionalGradeDao">
    <!--==================================基本查询============================-->

    <!-- teacher表 -->
    <resultMap id="teacherProfessionalGrade" type="com.lcvc.intern_choose.model.TeacherProfessionalGrade">
        <association property="teacher" javaType="com.lcvc.intern_choose.model.Teacher" column="teacherNumber" select="com.lcvc.intern_choose.dao.TeacherDao.get">
        </association>
        <association property="professionalGrade" javaType="com.lcvc.intern_choose.model.ProfessionalGrade" column="professionalGradeId" select="com.lcvc.intern_choose.dao.ProfessionalGradeDao.get">
        </association>
    </resultMap>

    <select id="get" resultMap="teacherProfessionalGrade">
        select * from teacher_professional_grade where id=#{id}
    </select>


    <select id="readAll" resultMap="teacherProfessionalGrade">
        select * from teacher_professional_grade
        <include refid="queryWhere"></include>
    </select>

    <select id="query" resultMap="teacherProfessionalGrade">
        select * from teacher_professional_grade
        <include refid="queryWhere"></include>
        order by id asc limit #{offset},#{length}
    </select>

    <select id="querySize" resultType="Integer">
        select count(1)  from teacher_professional_grade
        <include refid="queryWhere"></include>
    </select>

    <insert id="save">
        insert into teacher_professional_grade(id,teacherNumber, professionalGradeId, studentQuantity,creatTime)
        values(null , #{teacherNumber} , #{professionalGradeId} , #{studentQuantity},#{creatTime} )
    </insert>

    <update id="update">
        update teacher_professional_grade
         <set>
             <if test="teacherNumber!=null">teacherNumber = #{teacherNumber},</if>
             <if test="professionalGradeId!=null">professionalGradeId = #{professionalGradeId},</if>
             <if test="studentQuantity!=null">studentQuantity = #{studentQuantity},</if>
         </set>
         where  id = #{id}
    </update>

    <delete id="delete">
        delete from teacher_professional_grade where  id = #{id}
    </delete>
    
    <!--统一查询的条件-->
    <sql id="queryWhere">
        <if test="objectQuery!=null">
            <where>
                <!--子查询，如果为真，则查询根据teacher_professional_grade.id查询没有够实习学生的老师 -->
                <if test="objectQuery.lessThanStudentQuantity==true">
                    (select count(1) from teacher_student where tpgId=teacher_professional_grade.id)&lt;studentQuantity
                </if>
                <!--子查询,名字模糊查询,根据名字模糊查询teacher表-->
                <if test="objectQuery.name!=null and objectQuery.name.length()>0">
                    <!-- bind，重新定义一个变量，可用于模糊查询等，并且可以直接覆盖原变量 -->
                    <bind name="name" value="'%' + _parameter.objectQuery.name + '%'" />
                    and teacherNumber in (select teacherNumber from teacher where name like #{name})
                </if>
                <if test="objectQuery.professionalId!=null">
                    and teacherNumber in (SELECT teacherNumber FROM teacher WHERE professionalId= #{objectQuery.professionalId})
                </if>
                <if test="objectQuery.teacherNumber!=null">
                    and teacherNumber=#{objectQuery.teacherNumber}
                </if>
                <if test="objectQuery.professionalGradeId!=null">
                    and professionalGradeId=#{objectQuery.professionalGradeId}
                </if>
            </where>
        </if>
    </sql>

</mapper>