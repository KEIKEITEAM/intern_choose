<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lcvc.intern_choose.dao.TeacherStudentDao">
    <!--==================================基本查询============================-->
    <!-- teacher表 -->
    <resultMap id="studentAndTeacher" type="com.lcvc.intern_choose.model.TeacherStudent">
        <association property="student" javaType="com.lcvc.intern_choose.model.Student" column="studentNumber"
                     select="com.lcvc.intern_choose.dao.StudentDao.get">
        </association>
        <association property="teacherProfessionalGrade"
                     javaType="com.lcvc.intern_choose.model.TeacherProfessionalGrade" column="tpgId"
                     select="com.lcvc.intern_choose.dao.TeacherProfessionalGradeDao.get">
        </association>
    </resultMap>

    <select id="querySize" resultType="Integer">
        select count(1) from teacher_student
        <include refid="queryWhere"></include>
    </select>

    <select id="getByStudentNumber" resultType="TeacherStudent">
        select * from teacher_student where studentNumber=#{studentNumber}
    </select>

    <insert id="save">
        insert into teacher_student (id,studentNumber,tpgId,creatTime) value (null,#{studentNumber},#{tpgId},#{creatTime})
    </insert>

    <update id="update">
        update teacher_student
        <set>
            <if test="studentNumber!=null">studentNumber = #{studentNumber},</if>
            <if test="tpgId!=null">tpgId = #{tpgId},</if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
        delete from teacher_student where  id = #{id}
    </delete>

    <select id="get" resultType="TeacherStudent">
        select * from teacher_student where id = #{id}
    </select>


    <select id="readAll" resultMap="studentAndTeacher">
        select * from teacher_student
        <include refid="queryWhere"></include>
        order by studentNumber asc
    </select>

    <select id="query" resultMap="studentAndTeacher">
        select * from teacher_student
        <include refid="queryWhere"></include>
        order by id asc limit #{offset},#{length}
    </select>


    <!--统一查询的条件，查询条件少的时候不需要需要对象来查询-->
    <sql id="queryWhere">
        <if test="objectQuery!=null">
            <where>
                <!-- 根据classIds查询集合-->
                <if test="objectQuery.classIds!=null">
                    <if test="objectQuery.classIds.size()>0">
                        studentNumber in
                        (
                        SELECT studentNumber FROM student WHERE classId in
                        <foreach item="items" collection="objectQuery.classIds" open="(" separator="," close=")">
                            #{items}
                        </foreach>
                        )
                    </if>
                </if>
                <!--学生名字的模糊查询-->
                <if test="objectQuery.studentName!=null and objectQuery.studentName.length()>0">
                    <!-- bind，重新定义一个变量，可用于模糊查询等，并且可以直接覆盖原变量 -->
                    <bind name="studentName" value="'%' + _parameter.objectQuery.studentName + '%'"/>
                    and studentNumber in (SELECT studentNumber FROM student WHERE name like #{studentName})
                </if>
                <if test="objectQuery.tpgId!=null">
                    and tpgId=#{objectQuery.tpgId}
                </if>
                <if test="objectQuery.studentNumber!=null">
                    and studentNumber=#{objectQuery.studentNumber}
                </if>

            </where>
        </if>
    </sql>

</mapper>