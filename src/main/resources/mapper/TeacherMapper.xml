<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 指明这个映射文件adminMapper.xml的逻辑路径,如果与接口建立映射，那么逻辑路径应该与接口的物理路径一致-->
<mapper namespace="com.lcvc.intern_choose.dao.TeacherDao">
    <!--==================================基本查询============================-->
    <!--professional 关联对象    -->
    <resultMap id="professional" type="com.lcvc.intern_choose.model.Teacher">
        <association property="professional" javaType="com.lcvc.intern_choose.model.Professional"
                     column="professionalId" select="com.lcvc.intern_choose.dao.ProfessionalDao.get">
        </association>
    </resultMap>
    <select id="get" resultMap="professional">
        select * from teacher where teacherNumber=#{teacherNumber}
    </select>

    <select id="login" resultType="Integer">
        select count(1) from teacher where teacherNumber=#{teacherNumber} and password=#{password}
    </select>

    <select id="readAll" resultMap="professional">
        select * from teacher
        <include refid="queryWhere"></include>
    </select>

    <select id="query" resultMap="professional">
        select * from teacher
        <include refid="queryWhere"></include>
        order by teacherNumber asc limit #{offset},#{length}
    </select>

    <select id="querySize" resultType="Integer">
        select count(1)  from teacher
        <include refid="queryWhere"></include>
    </select>

    <insert id="save">
        insert into teacher(teacherNumber, name, password,tel,qq, professionalId)
        values (#{teacherNumber},#{name},#{password},#{tel},#{qq},#{professionalId})
    </insert>

    <update id="update">
        update teacher
        <set>
            <if test="name!=null">name=#{name},</if>
            <if test="password!=null">password=#{password},</if>
            <if test="tel!=null and tel.length>0">tel=#{tel},</if>
            <if test="qq!=null and qq.length>0">qq=#{qq},</if>
            <if test="professionalId!=null">professionalId=#{professionalId},</if>
        </set>
        where teacherNumber = #{teacherNumber}
    </update>

    <delete id="delete">
         delete from teacher where teacherNumber = #{teacherNumber}
    </delete>

    <!--统一查询的条件-->
    <sql id="queryWhere">
        <if test="objectQuery!=null">
            <where>
                <!--名字的模糊查询-->
                <if test="objectQuery.name!=null and objectQuery.name.length()>0">
                    <!-- bind，重新定义一个变量，可用于模糊查询等，并且可以直接覆盖原变量 -->
                    <bind name="name" value="'%' + _parameter.objectQuery.name + '%'"/>
                    and name like #{name}
                </if>
                <if test="objectQuery.professionalId!=null">
                    and professionalId = #{objectQuery.professionalId}
                </if>
            </where>
        </if>
    </sql>
</mapper>